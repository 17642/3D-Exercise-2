using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class ActionController : MonoBehaviour
{
    [SerializeField]
    private float range;//습득 가능한 최대 거리 

    private bool pickupActivated=false; //습득 가능시 활성화

    private RaycastHit hitInfo;//충돌체 정보 저장

    [SerializeField]
    private LayerMask layerMask;//레이어 마스크(아이템 레이어에만 반을하게)

    [SerializeField]
    private Text actionText;//하이템 텍스트 
    [SerializeField]
    private Inventory inventory;

    void Update()
    {
        CheckItem();
        TryAction();
    }

    private void TryAction()
    {
        if (Input.GetKeyDown(KeyCode.E))
        {
            CheckItem();
            CanPickUp();
        }
    }

    private void CanPickUp()
    {
        if (pickupActivated)
        {
            if (hitInfo.transform != null)
            {
                Debug.Log(hitInfo.transform.GetComponent<ItemPickup>().item.itemName + " 획득 ");
                inventory.AcquireItem(hitInfo.transform.GetComponent<ItemPickup>().item, 1);//아이템 습득
                Destroy(hitInfo.transform.gameObject);
                InfoDisappear();
            }
        }
    }

    private void CheckItem()
    {
        if(Physics.Raycast(transform.position,transform.TransformDirection(Vector3.forward),out hitInfo,range,layerMask))
        {
            if(hitInfo.transform.tag == "Item")//물체의 태그가 item일때만
            {
                ItemInfoAppear();
            }
        }
        else//부딪힌 물체가 없을 때에는
        {
            InfoDisappear();
        }
    }

    private void ItemInfoAppear()
    {
        pickupActivated = true;
        actionText.gameObject.SetActive(true);
        actionText.text = hitInfo.transform.GetComponent<ItemPickup>().item.itemName + " 획득 " + "<color=yellow>" + "(E)" + "</color>";

    }

    private void InfoDisappear()
    {
        pickupActivated = false;
        actionText.gameObject.SetActive(false);
    }
}
